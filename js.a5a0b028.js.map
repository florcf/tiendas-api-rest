{"version":3,"sources":["js/list-tiendas.js","js/add-tienda.js","js/search-tienda.js","js/index.js"],"names":["xhrGetTiendas","request","XMLHttpRequest","responseType","addEventListener","readyState","hideRequestButtons","spinner","status","showTiendas","response","showFormSection","showErrorMessage","open","url","send","fetchGetTiendas","fetch","method","then","json","data","catch","jQueryGetTiendas","$","ajax","type","dataType","beforeSend","success","error","complete","document","querySelector","className","classList","toggle","tiendas","tiendaTemplate","tiendasElement","removeHtmlElements","forEach","tienda","content","textContent","nombreTienda","direccion","localidad","telefono","cloneTiendaTemplate","importNode","appendChild","selector","element","hasChildNodes","children","child","remove","message","hElement","createElement","text","createTextNode","xhrAddTienda","formButtonFeedback","list","resetForm","setRequestHeader","JSON","stringify","fetchAddTienda","options","headers","body","jQueryAddTienda","contentType","icon","state","addButton","firstElementChild","lastElementChild","disabled","reset","querySelectorAll","input","xhrGetTiendaById","id","searchButtonFeedBack","fetchGetTiendaById","length","parse","jQueryGetTiendaById","undefined","requestType","xhrButton","fetchButton","jQueryButton","form","forms","newTiendaBtn","addInputsEvent","addTiendaBtn","formValidity","formTextInputs","checkInput","checkValidity","value","add","validity","errorElement","nextElementSibling","valueMissing","showMessage","patternMismatch","removeMessage","spanElement","pop","searchButton","removeSearchResult","trim","search"],"mappings":"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","file":"js.a5a0b028.js","sourceRoot":"../src","sourcesContent":["import { url } from './index.js';\r\n\r\n/**\r\n * @description Realiza una petición HTTP, de tipo GET,\r\n * con el objeto XMLHttpRequest. Obtiene un array de\r\n * objetos con todas las tiendas. Muestra las tiendas si\r\n * la respuesta es positiva.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction xhrGetTiendas () {\r\n    const request = new XMLHttpRequest();\r\n    request.responseType = 'json';\r\n\r\n    request.addEventListener('readystatechange', () => {\r\n        if (request.readyState >= 1 && request.readyState <= 3) {\r\n            hideRequestButtons();\r\n            spinner(); // Muestra el spinner.\r\n        }\r\n        if (request.readyState === 4) {\r\n            spinner(); // Oculta el spinner.\r\n        }\r\n        if (request.readyState === 4 && request.status === 200) {\r\n            const tiendas = request.response;\r\n            showTiendas(tiendas);\r\n            showFormSection();\r\n        }\r\n        if (request.readyState === 4 && request.status !== 200) {\r\n            // No se ha podido obtener la lista de tiendas.\r\n            showErrorMessage();\r\n        }\r\n    });\r\n\r\n    request.open('GET', url);\r\n    request.send();\r\n}\r\n\r\n/**\r\n * @description Realiza una petición HTTP, de tipo GET,\r\n * con Fetch API. Obtiene un array de objetos con todas\r\n * las tiendas. Muestra las tiendas si la respuesta es\r\n * positiva.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction fetchGetTiendas () {\r\n    hideRequestButtons();\r\n    spinner();\r\n    fetch(url, { method: 'GET' })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            spinner();\r\n            showTiendas(data);\r\n            showFormSection();\r\n        })\r\n        .catch(() => {\r\n            spinner();\r\n            showErrorMessage();\r\n        });\r\n}\r\n\r\n/**\r\n * @description Realiza una petición HTTP, de tipo GET,\r\n * con jQuery Ajax. Obtiene un array de objetos con todas\r\n * las tiendas. Muestra las tiendas si la respuesta es\r\n * positiva.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction jQueryGetTiendas () {\r\n    $.ajax({\r\n        url: url,\r\n        type: 'GET',\r\n        dataType: 'json',\r\n        beforeSend () {\r\n            hideRequestButtons();\r\n            spinner();\r\n        },\r\n        success: function (json) {\r\n            showFormSection();\r\n            showTiendas(json);\r\n        },\r\n        error: function () {\r\n            showErrorMessage();\r\n        },\r\n        complete: function () {\r\n            spinner();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @description Oculta la sección de los\r\n * botones para seleccionar el tipo\r\n * de petición.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction hideRequestButtons () {\r\n    const requestButtons = document.querySelector('#request-types-buttons');\r\n    requestButtons.className = 'hidden-section';\r\n}\r\n\r\n/**\r\n * @description Muestra u oculta el spinner\r\n * alternando la clase css .show-spinner.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction spinner () {\r\n    const spinner = document.querySelector('#spinner');\r\n    spinner.classList.toggle('show-spinner');\r\n}\r\n\r\n/**\r\n * @description Hace visible el formulario\r\n * de búsqueda de tienda por id y de\r\n * añadir tienda.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction showFormSection () {\r\n    const formSection = document.querySelector('#response-section');\r\n    formSection.className = 'show-form';\r\n}\r\n\r\n/**\r\n * @description Clona y renderiza un template por cada\r\n * una de las tiendas para mostrar su información.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {Array} tiendas\r\n */\r\nfunction showTiendas (tiendas) {\r\n    const tiendaTemplate = document.querySelector('#tienda-template');\r\n    const tiendasElement = document.querySelector('#tiendas');\r\n    removeHtmlElements('#tiendas');\r\n    tiendas.forEach(tienda => {\r\n        const nameElement = tiendaTemplate.content.querySelector('h2');\r\n        nameElement.textContent = tienda.nombreTienda;\r\n        const addressElement = tiendaTemplate.content.querySelector('p');\r\n        addressElement.textContent = `${tienda.direccion} (${tienda.localidad})`;\r\n        const phoneElement = tiendaTemplate.content.querySelector('p:last-child');\r\n        phoneElement.textContent = tienda.telefono;\r\n        const cloneTiendaTemplate = document.importNode(tiendaTemplate.content, true);\r\n        tiendasElement.appendChild(cloneTiendaTemplate);\r\n    });\r\n}\r\n\r\n/**\r\n * @description Elimina los hijos de un elemento\r\n * si es que los tiene.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {String} selector\r\n */\r\nfunction removeHtmlElements (selector) {\r\n    const element = document.querySelector(selector);\r\n    if (element.hasChildNodes()) {\r\n        const children = [...element.children];\r\n        children.forEach(child => {\r\n            child.remove();\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * @description Crea un elemento HTML y un nodo texto\r\n * para mostrar un mensaje de error.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {string} [message='Lo sentimos, ha ocurrido un error.']\r\n */\r\nfunction showErrorMessage (message = 'Lo sentimos, ha ocurrido un error.') {\r\n    removeHtmlElements('#tiendas');\r\n    const tiendasElement = document.querySelector('#tiendas');\r\n    const hElement = document.createElement('h2');\r\n    const text = document.createTextNode(message);\r\n    hElement.appendChild(text);\r\n    tiendasElement.appendChild(hElement);\r\n}\r\n\r\nexport {\r\n    xhrGetTiendas,\r\n    fetchGetTiendas,\r\n    jQueryGetTiendas,\r\n    showTiendas,\r\n    showErrorMessage,\r\n    spinner\r\n}\r\n;\r\n","import { url } from './index.js';\r\nimport * as list from './list-tiendas.js';\r\n\r\n/**\r\n * @description Realiza una petición de tipo POST,\r\n * con el objeto XMLHttpRequest para añadir una tienda.\r\n * Si la respuesta es correcta, se muestra la lista\r\n * actualizada.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {JSON} tienda\r\n */\r\nfunction xhrAddTienda (tienda) {\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.addEventListener('readystatechange', () => {\r\n        if (request.readyState >= 1 && request.readyState <= 3) {\r\n            formButtonFeedback();\r\n        }\r\n        if (request.readyState === 4 && request.status === 204) {\r\n            list.xhrGetTiendas();\r\n        }\r\n        if (request.readyState === 4 && request.status !== 204) {\r\n            list.showErrorMessage('No se ha podido añadir la tienda.');\r\n        }\r\n        if (request.readyState === 4) {\r\n            resetForm();\r\n        }\r\n    });\r\n\r\n    request.open('POST', url);\r\n    request.setRequestHeader('Content-Type', 'application/json');\r\n    request.send(JSON.stringify(tienda));\r\n}\r\n\r\n/**\r\n * @description Realiza una petición de tipo POST,\r\n * con fetch API, para añadir una tienda. Si la respuesta\r\n * es correcta, se muestra la lista actualizada.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {JSON} tienda\r\n */\r\nfunction fetchAddTienda (tienda) {\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(tienda)\r\n    };\r\n    formButtonFeedback();\r\n    fetch(url, options).then(response => response.status).then(data => {\r\n        if (data === 204) {\r\n            resetForm();\r\n            list.fetchGetTiendas();\r\n        }\r\n    }).catch(() => {\r\n        resetForm();\r\n        list.showErrorMessage('No se ha podido añadir la tienda.');\r\n    });\r\n}\r\n\r\n/**\r\n * @description Realiza una petición de tipo POST\r\n * con jQuery Ajax para añadir una tienda. Si la\r\n * respuesta es correcta, se muestra la lista\r\n * actualizada.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {String} tienda\r\n */\r\nfunction jQueryAddTienda (tienda) {\r\n    $.ajax({\r\n        url: url,\r\n        type: 'POST',\r\n        data: JSON.stringify(tienda),\r\n        contentType: 'application/json; charset=UTF-8',\r\n        beforeSend () {\r\n            formButtonFeedback();\r\n        },\r\n        success: function () {\r\n            list.jQueryGetTiendas();\r\n        },\r\n        error: function () {\r\n            list.showErrorMessage('No se ha podido añadir la tienda.');\r\n        },\r\n        complete: function () {\r\n            resetForm();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @description Cambia el botón de añadir tienda\r\n * para dar feedback al usuario mientras se realiza\r\n * la petición.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {string} [icon='fas fa-circle-notch fa-spin']\r\n * @param {string} [text=' Cargando...']\r\n * @param {boolean} [state=true]\r\n */\r\nfunction formButtonFeedback (icon = 'fas fa-circle-notch fa-spin', text = ' Cargando...', state = true) {\r\n    const addButton = document.querySelector('#add-tienda');\r\n    addButton.firstElementChild.className = icon;\r\n    addButton.lastElementChild.textContent = text;\r\n    addButton.disabled = state;\r\n}\r\n\r\n/**\r\n * @description Deja el formulario como en su\r\n * estado inicial.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction resetForm () {\r\n    const form = document.querySelector('form');\r\n    form.reset();\r\n    const textInputs = [...document.querySelectorAll('form input[type=\"text\"]')];\r\n    textInputs.forEach(input => {\r\n        input.classList.remove('valid-input');\r\n    });\r\n    formButtonFeedback('', ' Añadir Tienda', false);\r\n}\r\n\r\nexport {\r\n    xhrAddTienda,\r\n    fetchAddTienda,\r\n    jQueryAddTienda\r\n}\r\n;\r\n","import { url } from './index.js';\r\nimport { showTiendas, showErrorMessage } from './list-tiendas.js';\r\n\r\n/**\r\n * @description Realiza una petición HTTP, de tipo GET,\r\n * con el objeto XMLHttpRequest. Obtiene una tienda en\r\n * formato JSON al pasarle un id. Muestra la tienda si\r\n * la respuesta es positiva.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {String} id\r\n */\r\nfunction xhrGetTiendaById (id) {\r\n    const request = new XMLHttpRequest();\r\n    request.responseType = 'json';\r\n\r\n    request.addEventListener('readystatechange', () => {\r\n        if (request.readyState >= 1 && request.readyState <= 3) {\r\n            searchButtonFeedBack();\r\n        } else {\r\n            searchButtonFeedBack('fas fa-times');\r\n        }\r\n        if (request.readyState === 4 && request.status === 200) {\r\n            const tienda = request.response;\r\n            showTiendas([tienda]);\r\n        }\r\n        if (request.readyState === 4 && request.status !== 200) {\r\n            showErrorMessage('Tienda no encontrada.');\r\n        }\r\n    });\r\n\r\n    request.open('GET', `${url}${id}`);\r\n    request.send();\r\n}\r\n\r\n/**\r\n * @description Realiza una petición HTTP, de tipo GET,\r\n * con Fetch API. Obtiene una tienda en formato JSON al\r\n * pasarle un id. Muestra la tienda si la respuesta es\r\n * positiva.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {String} id\r\n */\r\nfunction fetchGetTiendaById (id) {\r\n    searchButtonFeedBack();\r\n    fetch(`${url}${id}`, { method: 'GET' })\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            if (data.length > 0) {\r\n                showTiendas([JSON.parse(data)]);\r\n            } else {\r\n                showErrorMessage('Tienda no encontrada.');\r\n            }\r\n            searchButtonFeedBack('fas fa-times');\r\n        })\r\n        .catch(() => {\r\n            showErrorMessage('Tienda no encontrada.');\r\n            searchButtonFeedBack('fas fa-times');\r\n        });\r\n}\r\n\r\n/**\r\n * @description Realiza una petición HTTP, de tipo GET,\r\n * con jQuery Ajax. Obtiene una tienda en formato JSON al\r\n * pasarle un id. Muestra la tienda si la respuesta es\r\n * positiva.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {String} id\r\n */\r\nfunction jQueryGetTiendaById (id) {\r\n    $.ajax({\r\n        url: `${url}${id}`,\r\n        type: 'GET',\r\n        dataType: 'json',\r\n        beforeSend () {\r\n            searchButtonFeedBack();\r\n        },\r\n        success: function (json) {\r\n            if (json !== undefined) {\r\n                showTiendas([json]);\r\n            } else {\r\n                showErrorMessage('Tienda no encontrada.');\r\n            }\r\n        },\r\n        error: function () {\r\n            showErrorMessage('Tienda no encontrada.');\r\n        },\r\n        complete: function () {\r\n            searchButtonFeedBack('fas fa-times');\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @description Cambia el icono del botón\r\n * de búsqueda.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {string} [icon='fas fa-circle-notch fa-spin']\r\n */\r\nfunction searchButtonFeedBack (icon = 'fas fa-circle-notch fa-spin') {\r\n    const searchBtnIcon = document.querySelector('#search-btn > i');\r\n    searchBtnIcon.className = icon;\r\n}\r\n\r\nexport {\r\n    xhrGetTiendaById,\r\n    fetchGetTiendaById,\r\n    jQueryGetTiendaById\r\n}\r\n;\r\n","import * as list from './list-tiendas.js';\r\nimport * as add from './add-tienda.js';\r\nimport * as search from './search-tienda.js';\r\n\r\nexport const url = 'https://webapp-210130211157.azurewebsites.net/webresources/mitienda/';\r\n\r\n/** @type {String} */\r\n/** Tipo de petición seleccionada por el usuario. */\r\nlet requestType = '';\r\n\r\n/** @type {HTMLButtonElement} */\r\nconst xhrButton = document.querySelector('#xhr');\r\nxhrButton.addEventListener('click', () => {\r\n    requestType = 'xhr';\r\n    list.xhrGetTiendas();\r\n});\r\n\r\n/** @type {HTMLButtonElement} */\r\nconst fetchButton = document.querySelector('#fetch');\r\nfetchButton.addEventListener('click', () => {\r\n    requestType = 'fetch';\r\n    list.fetchGetTiendas();\r\n});\r\n\r\n/** @type {HTMLButtonElement} */\r\nconst jQueryButton = document.querySelector('#jquery');\r\njQueryButton.addEventListener('click', () => {\r\n    requestType = 'jquery';\r\n    list.jQueryGetTiendas();\r\n});\r\n\r\n/**\r\n * Formulario Nueva Tienda\r\n */\r\n/** @type {HTMLFormElement} */\r\nconst form = document.forms[0];\r\n\r\n/** @type {HTMLButtonElement} */\r\nconst newTiendaBtn = document.querySelector('#new-tienda');\r\nnewTiendaBtn.addEventListener('click', () => {\r\n    // Alterna la clase css que hace visible el formulario.\r\n    form.classList.toggle('show-form');\r\n    addInputsEvent();\r\n});\r\n\r\n/** @type {HTMLInputElement} */\r\nconst addTiendaBtn = document.querySelector('#add-tienda');\r\naddTiendaBtn.addEventListener('click', () => {\r\n    formValidity();\r\n});\r\n\r\n/**\r\n * Array de inputs de tipo texto del formulario\r\n * para añadir una tienda nueva.\r\n */\r\nconst formTextInputs = [...document.forms[0]];\r\n/**\r\n * Elimina el último elemento del array,\r\n * el botón de enviar.\r\n */\r\nformTextInputs.pop();\r\n\r\n/**\r\n * @description Añade el evento de tipo input a cada\r\n * uno de los inputs del formulario.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction addInputsEvent () {\r\n    formTextInputs.forEach(input => {\r\n        input.addEventListener('input', () => {\r\n            checkInput(input);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * @description Verifica si el formulario cumple\r\n * con todas las validaciones. Si algún input no cumple\r\n * todas las validaciones, se vuelve a llamar a la función\r\n * checkInput para todos ellos.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction formValidity () {\r\n    if (!form.checkValidity()) {\r\n        formTextInputs.forEach(input => {\r\n            checkInput(input);\r\n        });\r\n    } else {\r\n        // Método POST\r\n        const tienda = {\r\n            nombreTienda: formTextInputs[0].value,\r\n            direccion: formTextInputs[1].value,\r\n            localidad: formTextInputs[2].value,\r\n            telefono: formTextInputs[3].value\r\n        };\r\n        if (requestType === 'xhr') {\r\n            add.xhrAddTienda(tienda);\r\n        } else if (requestType === 'fetch') {\r\n            add.fetchAddTienda(tienda);\r\n        } else if (requestType === 'jquery') {\r\n            add.jQueryAddTienda(tienda);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @description Valida cada uno de los inputs.\r\n * Muestra mensajes de error y añade o elimina\r\n * las clases css necesarias.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {HTMLInputElement} element\r\n */\r\nfunction checkInput (element) {\r\n    const validity = element.validity;\r\n    const errorElement = element.nextElementSibling;\r\n    if (validity.valueMissing) {\r\n        showMessage(errorElement);\r\n        element.classList.add('invalid-input');\r\n    } else if (validity.patternMismatch) {\r\n        showMessage(errorElement, 'El teléfono debe tener 9 cifras y empezar por 6, 8 ó 9.');\r\n        element.classList.add('invalid-input');\r\n    } else {\r\n        removeMessage(errorElement);\r\n        element.classList.remove('invalid-input');\r\n        element.classList.add('valid-input');\r\n    }\r\n}\r\n\r\n/**\r\n * @description Crea un elemento de tipo span y un nodo\r\n * texto con un mensaje de error, y lo añade al DOM.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {HTMLDivElement} element\r\n * @param {string} [text='Campo obligatorio.']\r\n */\r\nfunction showMessage (element, text = 'Campo obligatorio.') {\r\n    removeMessage(element);\r\n    const spanElement = document.createElement('span');\r\n    const message = document.createTextNode(text);\r\n    spanElement.appendChild(message);\r\n    element.appendChild(spanElement);\r\n}\r\n\r\n/**\r\n * @description Elimina el elemento que muestra el\r\n * mensaje de error de un input.\r\n * @author Florencia Del Castillo Fleitas\r\n * @param {HTMLDivElement} element\r\n */\r\nfunction removeMessage (element) {\r\n    if (element.hasChildNodes()) {\r\n        const children = [...element.children];\r\n        children.forEach(child => {\r\n            child.remove();\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * BUSCAR TIENDA\r\n */\r\n/** @type {HTMLButtonElement} */\r\nconst searchButton = document.querySelector('#search-btn');\r\nsearchButton.addEventListener('click', () => {\r\n    if (searchButton.firstElementChild.className === 'fas fa-search') {\r\n        /** @type {String} */\r\n        const id = document.querySelector('#tienda-id').value.trim();\r\n        if (id.length !== 0) {\r\n            if (requestType === 'xhr') {\r\n                search.xhrGetTiendaById(id);\r\n            } else if (requestType === 'fetch') {\r\n                search.fetchGetTiendaById(id);\r\n            } else if (requestType === 'jquery') {\r\n                search.jQueryGetTiendaById(id);\r\n            }\r\n        } /* else {\r\n            list.showErrorMessage('Tienda no encontrada.');\r\n            searchButton.firstElementChild.className = 'fas fa-search';\r\n        } */\r\n    } else {\r\n        removeSearchResult();\r\n    }\r\n});\r\n\r\n/**\r\n * @description Devuelve el input y el botón de búsqueda\r\n * a su estado inicial y muestra la lista de tiendas\r\n * según la elección del usuario.\r\n * @author Florencia Del Castillo Fleitas\r\n */\r\nfunction removeSearchResult () {\r\n    const idInput = document.querySelector('#tienda-id');\r\n    idInput.value = '';\r\n    searchButton.firstElementChild.className = 'fas fa-search';\r\n    if (requestType === 'xhr') {\r\n        list.xhrGetTiendas();\r\n    } else if (requestType === 'fetch') {\r\n        list.fetchGetTiendas();\r\n    } else if (requestType === 'jquery') {\r\n        list.jQueryGetTiendas();\r\n    }\r\n}\r\n"]}